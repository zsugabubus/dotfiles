#!/bin/dash -e
if test "$1" = "--"; then
  shift

  NEWUSER=me

  bind() {
    mkdir -m755 -p "./rootfs/$1"
    mount --make-unbindable --make-rslave --rbind "$1" "./rootfs$1"
  }

  bind_ro() {
    mkdir -m755 -p "./rootfs/${2:-$1}"
    mount --make-unbindable --bind -o ro "$1" "./rootfs/${2:-$1}"
  }

  cd /dev/shm || cd /tmp
  mount --make-unbindable --make-private -t tmpfs tmpfs . -o noatime,size=2g,mode=755
  cd .

  mkdir --mode=755 rootfs work changes

  mount --make-unbindable --make-private -t overlay overlay -o lowerdir=/,workdir=./work,upperdir=./changes ./rootfs

  bind_ro /sys
  bind_ro /dev
  mount -t devpts devpts -onewinstance,nosuid,noexec,noatime ./rootfs/dev/pts
  bind_ro /proc

  bind_ro /tmp/.X11-unix
  mount -t tmpfs tmpfs ./rootfs/dev/shm -o size=1g,mode=777

  bind_ro "$HOME" "/home/$NEWUSER"
  mount --make-unbindable --make-rslave -t tmpfs tmpfs "./rootfs/home/$NEWUSER/.local" -o "size=100M,mode=777"
  bind "$(readlink "$HOME/mem")"

  mkdir -m755 -- \
    "./rootfs/run/user/$UID/cache"
  bind_ro "$HOME/.local/share/nvim/site" "/home/$NEWUSER/.local/share/nvim/site"
  chown "$USER:$USER" \
    "./rootfs/home/$NEWUSER/.local" \
    "./rootfs/home/$NEWUSER/.local/share" \
    "./rootfs/home/$NEWUSER/.local/share/nvim" \
    "./rootfs/run/user/$UID" \
    "./rootfs/run/user/$UID/cache"

  chmod 755 -- \
    "./rootfs/run" \
    "./rootfs/run/user"
  chmod 700 -- \
    "./rootfs/run/user/$UID" \
    "./rootfs/run/user/$UID/cache"

  pivot_root rootfs rootfs
  cd /

  cd /etc
  ln -sf /usr/share/zoneinfo/UTC localtime
  hostname sheep
  rm fstab crypttab group- shadow-
  usermod "$USER" -l "$NEWUSER" -d "/home/$NEWUSER"
  echo "$NEWUSER:$NEWUSER" | chpasswd >/dev/null
  echo sheep >hostname

  cd -- /home/$NEWUSER/mem

  USER=$NEWUSER
  if test "$#" -gt 0; then
    eval "$@"
  else
    exec su "$NEWUSER"
  fi
else
  exec sudo -E env -u SHLVL -u SUDO_COMMAND -u SUDO_USER "UID=$(id -u)" "USER=$USER" unshare \
    --mount \
    --uts \
    --ipc \
    --pid \
    --cgroup \
    --time \
    --boottime $(expr $(date --date="$(uptime -s)" +%s) - $(date +%s) + 1) \
    --mount-proc \
    --propagation slave \
    --kill-child \
    --fork \
    -- "$0" -- "$@"
fi
