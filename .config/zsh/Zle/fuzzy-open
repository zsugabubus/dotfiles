#autoload
#
zmodload zsh/attr

local files
while :; do
	if [[ $LBUFFER =~ '(\S+)$' ]]; then
		local basedir=$(realpath -- $match[1])
		local root=( $basedir )
		local find_args=(-maxdepth 1)
	else
		local basedir=
		local root=( $PWD )
		local find_args=()
	fi

	files=$(
		setopt pipefail
		# find -H $root -mindepth 1 $find_args \( \( -xtype d -name '.*' -prune \) -o -printf '%P\0' \) 2>/dev/null |
		rg --files -0 |
		( { [[ -z $basedir ]] || cd -q -- $basedir } && xargs -0r ls -UbNd --color -- 2>/dev/null ) |
		fzf -d $'\xa0' --ansi --multi --bind alt-enter:select-all+accept-non-empty --bind enter:accept-non-empty --bind ')':jump-accept
	) || break

	# nbsp=$(print $'\xa0'); print -v nbsp2 $'\xa0'; [[ "$nbsp" == "$nbsp2" ]] || { echo "What?" && echo "$nbsp\n$nbsp2" | od -c }

	files=( ${${(f)files}//#?[Â ]#/} )

	if [[ $#files = 0 ]]; then
		break
	fi

	if [[ ! zle || -z $BUFFER ]]; then
		# Open with sensible application.
		autoload -Uz open
		open $files
		break
	else
		if [[ -n "$basedir" && ! $LBUFFER =~ /$ ]]; then
			LBUFFER+='/'
		elif [[ -z "$basedir" && $LBUFFER =~ \\S$ ]]; then
			LBUFFER+=' '
		fi
		LBUFFER+=${(q-@)files}
		if [[ $#files == 1 && -d $basedir/$files[1] ]]; then
			LBUFFER+=/
		else
			LBUFFER+=' '
			break
		fi
	fi
done

echo
zle reset-prompt
_zsh_autosuggest_clear
