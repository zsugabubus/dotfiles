#autoload

emulate -L zsh

zmodload zsh/datetime
zmodload -F zsh/stat b:zstat

autoload -Uz add-zsh-hook

# IGNOREFILE PATH
function __git-is-dir-ignored() {
	[[ -f $1 ]] || return 1

	local pat=
	integer include=1
	for pat in ${${(f)"$(<$1)"}:#"#"*}; do
		integer bang=0
		if [[ ${pat:0:1} == ! ]]; then
			pat=${pat:1}
			bang=1
		fi

		pat=${pat%/}
		[[ $pat == */* ]] || pat="**/$pat"
		local re=${${(b)pat}//./\\.}
		# "/**/"
		re=${re//\/\\\*\\\*\///([^/]*/)*}
		# ^"**/"
		re=${re//#\\\*\\\*\//([^/]*/)*}
		# "/**"$
		re=${re//%\/\\\*\\\*//.*}
		# "*"
		re=${re//\\\*/[^/]*}
		# "?"
		re=${re//\\\?/[^/]?}
		# "[...]"
		re=${${re//\\\[/[}//\\\]/]}
		re="^/${re#/}(/|$)"

		if [[ $2 =~ $re ]]; then
			include=$bang
		fi
	done
	return $include
}

function __prompt_vcs_info() {
	typeset -a st

	if (( $+__prompt_vcs_dir )); then
		[[ -n $__prompt_vcs_dir ]] || return

		# index.lock is always created so time is updated on .git.
		integer mtime=$(zstat +mtime -- $__prompt_vcs_dir)
		(( mtime <= __prompt_vcs_last_checked )) && return
		typeset -gi __prompt_vcs_last_checked=$mtime
	else
		typeset -g __prompt_vcs_dir=
	fi

	unset __prompt_vcs_{path,status}

	zstat -sH st -F '' -- .
	local cdev=${st[device]}

	local gitdir= workdir=$PWD updir=
	while :; do
		gitdir=$workdir/.git
		if [[ -d $gitdir ]]; then
			break
		elif [[ -f $gitdir ]]; then
			gitdir="${$(<$gitdir)#gitdir: }"
			break
		fi

		updir=/${workdir##*/}$updir
		workdir=${workdir%/*}
		if [[ -z $workdir ]]; then
			return
		fi

		if [[ -z $GIT_DISCOVERY_ACROSS_FILESYSTEM ]]; then
			zstat -sH st -F '' -- $workdir
			if [[ ${st[device]} != $cdev ]]; then
				return
			fi
		fi

		if __git-is-dir-ignored $workdir/.gitignore $updir; then
			return
		fi
	done

	if __git-is-dir-ignored $gitdir/info/exclude $updir; then
		return
	fi

	local config_home=
	for config_home in ${XDG_CONFIG_HOME:-$HOME/.config}; do
		if __git-is-dir-ignored $config_home/git/ignore $updir; then
			return
		fi
	done

	local head=$(<$gitdir/HEAD 2>/dev/null)
	head=${head/ref: refs\/heads\//}
	head=${head:-undefined}

	local op=
	if [[ -d $gitdir/rebase-merge ]]; then
		op=REBASE
	elif [[ -d $gitdir/rebase-apply ]]; then
		if [[ -f $gitdir/rebase-apply/rebasing ]]; then
			op=REBASE
		elif [[ -f $gitdir/rebase-apply/applying ]]; then
			op=AM
		else
			op=AM/REBASE
		fi
	elif [[ -f $gitdir/MERGE_HEAD ]]; then
		op=MERGE
	elif [[ -f $gitdir/CHERRY_PICK_HEAD ]]; then
		op=CHERRY-PICK
	elif [[ -f $gitdir/REVERT_HEAD ]]; then
		op=REVERT
	elif [[ -f $gitdir/BISECT_LOG ]]; then
		op=BISECT
	fi

	if [[ $head =~ '^[[:xdigit:]]{40}$' ]]; then
		head=$(git --no-optional-locks name-rev --name-only --always --no-undefined "$head")
	fi

	typeset -g __prompt_vcs_dir=$gitdir
	typeset -g __prompt_vcs_path=${${PWD#${workdir%/*}/}//\%/%%}
	if (( $#__prompt_path <= $#__prompt_vcs_path )); then
		unset __prompt_vcs_path
	fi
	typeset -g __prompt_vcs_status=${${:-$head${op:+|}$op}//\%/%%}
}

function __prompt-preexec() {
	if (( ${${${(zA)2}:0:5}[(Ie)git]} )); then
		unset __prompt_vcs_dir
	fi
}

function __prompt-precmd() {
	set -- $? $pipestatus
	# Status is either the same as the last...
	if [[ ${@[-1]} == $1 ]]; then
		shift
	else
		# or not... e.g. after C-c in vared.
		# \_O_/
		set -- $1
	fi

	typeset -g __prompt_status=
	local exit_status=
	for exit_status; do
		__prompt_status+=\|${${:-$signals[$(( $exit_status - 127 ))]}:-$exit_status}
	done
	__prompt_status=${__prompt_status:1}
	if [[ $__prompt_status == '0' ]]; then
		unset __prompt_status
	fi

	__prompt_vcs_info
}

function __prompt-chpwd() {
	[[ $__prompt_old_pwd != $PWD ]] || return
	__prompt_old_pwd=$PWD
	__prompt_path=${(D)PWD}

	local dev=${${${(mM*)${(@f)"$(</proc/mounts)"}:#/dev* *"${:-${PWD:A}}" [^ ]## [^ ]## [^ ]## [^ ]##}#/dev/}%% *}
	__prompt_path=$dev${dev:+ }$__prompt_path
	__prompt_path=${__prompt_path//\%/%%}

	if [[ ! -w . ]]; then
		__prompt_path_ro=1
	else
		unset __prompt_path_ro
	fi

	unset __prompt_vcs_dir
	__prompt_vcs_info

	# Directory changed while zle widget was active.
	zle && zle .reset-prompt
}

function __prompt-zshexit() {
	# Reset cursor.
	printf '\e[2 q\r'
}

# [<default-user> [<default-host>]]
function prompt_powerline_setup() {
	setopt prompt_subst
	prompt_opts=( cr percent sp subst )

	ZLE_PROMPT_INDENT=0
	case $TERM in
	linux)
		ZLE_RPROMPT_INDENT=1
		PS1=\
''\
'${__prompt_who:+"$__prompt_who "}'\
'${__prompt_vcs_path:-$__prompt_path}'\
'${__prompt_path_ro:+" (RO)"}'\
'${__prompt_vcs_status:+" ($__prompt_vcs_status)"}'\
'%(!,#,%%) '
		PS2='%_> '
		RPS1=\
'%(1j.%F{yellow}%%%j%f .)'\
'${__prompt_keymap:+"%B%F{white}($__prompt_keymap)%f%b"}${${__prompt_keymap:+ }:-"%* "}'\
'${__prompt_status:+"%F{red}[$__prompt_status]%f"}'
		;;
	*)
		ZLE_RPROMPT_INDENT=$(( 1 - $+TMUX ))
		PS1=\
'${__prompt_who:+"%K{234}%F{214}%B $__prompt_who %b%K{254}%F{234}%{%G%}"}'\
'%K{254}%F{236}${__prompt_vcs_path:+" %{%G%}"} ${__prompt_vcs_path:-$__prompt_path}'\
'${__prompt_path_ro:+"%F{249} %{%G%}"}%F{254}'\
' ${__prompt_vcs_status:+"%K{113}%{%G%}%F{236}%b %{%G%} $__prompt_vcs_status %F{113}"}'\
'%k%{%G%}%f '\
\
'${${$(( 1 == __zfiles_active ))'\
'/0/}'\
'/1/"%B$__zfiles_cur/$#__zfiles_files%b${${${:-$#__zfiles_selection}/#0/}/#?*/" %S%B*$#__zfiles_selection%b%s"}'\
' stat=%B${${:-off on  wide}:$(( __zfiles_do_stat * 4 )):4}%b'\
' glob=%B$__zfiles_glob%b'\
'${${__zfiles_mode'\
'/#n##/${__zfiles_filter/#?*/" /%B$__zfiles_filter%b"}}'\
'/#t##/"%S%F{220}%k%{%G%}%s%K{220}%F{234} /%B$__zfiles_filter %b%K{254}%F{220}%k%{%G%}%f "'\
'}"}'
		RPS1=\
'%(1j.%F{yellow}%B%%%j%b%f .)'\
'${__prompt_keymap:+"%F{white}($__prompt_keymap)%f"}${${__prompt_keymap:+ }:-"%F{250}%*%f "}'\
'${__prompt_status:+"%F{197}%{%G%}%K{197}%F{227} %B$__prompt_status%b %f"}'\
'%(2L.%F{254}%{%G%}%K{254}%F{244} %L %f.)%k'
		PS2='%K{254}%F{247} %_ %k%F{254}%{%G%}%f '
		;;
	esac
	PS1=$'%{\033]133;A\033\\\\%}'$PS1

	case $TERM in
	linux)
		zstyle ':completion:*:warnings'  format '%F{red}%BNo matches for: %d%b%f'
		zstyle ':completion:*'           format '%B------- %d -------%b'
		;;
	*)
		zstyle ':completion::*:warnings' format '%K{197}%F{227}%B No matches %k%F{197}%b%f %d%b%k%f'
		zstyle ':completion::*'          format '%K{238}%F{254} %d %k%F{238}%f'
		;;
	esac

	function zle-line-init zle-keymap-select() {
		case $KEYMAP in
		viins|main) printf '\e[6 q\r' ;; # Non-blinking I-beam cursor.
		*)          printf '\e[2 q\r' ;; # Non-blinking block cursor.
		esac
		typeset -g __prompt_keymap=
		zle .reset-prompt
	}
	zle -N zle-line-init
	zle -N zle-keymap-select

	function zle-line-finish() {
		printf '\033[2 q\r' # Non-blinking block cursor.
		unset __prompt_keymap
		zle .reset-prompt
	}
	zle -N zle-line-finish

	add-zsh-hook preexec __prompt-preexec
	add-zsh-hook precmd __prompt-precmd
	add-zsh-hook chpwd __prompt-chpwd
	add-zsh-hook zshexit __prompt-zshexit

	typeset -g __prompt_who=$USER@$HOST
	if [[ -z $SSH_CONNECTION ]]; then
		__prompt_who=${${__prompt_who/#$1@/@}/%@$2/@}
	fi
	if [[ $__prompt_who == @ ]]; then
		unset __prompt_who
	fi

	unset __prompt_old_pwd
	__prompt-chpwd
}

function _prompt_powerline_teardown() {
	add-zsh-hook -D preexec __prompt-preexec
	add-zsh-hook -D precmd __prompt-precmd
	add-zsh-hook -D chpwd __prompt-chpwd
	add-zsh-hook -D zshexit __prompt-zshexit

	__prompt-zshexit
}

function prompt_powerline_preview() {
	prompt_preview_theme powerline
	prompt_preview_theme powerline "$USER" "$HOST"
}

[[ -o ksh_autoload ]] || prompt_powerline_setup "$@"
