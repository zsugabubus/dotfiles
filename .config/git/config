[advice]
	detachedHead = no

[alias]
	a = add --verbose
	ae = a --edit
	ap = a --patch
	arej = apply --reject
	au = a --update

	b = branch --ignore-case --format '%(if)%(HEAD)%(then)%(color:bold red)%(end)%(align:25)%(refname:short)%(color:bold normal)%(push:trackshort)%(end)%(color:dim white) %(color:reset)%(contents:subject) %(color:bold blue)%(authorname)%(color:reset) %(color:nobold dim white)%(push:short)'
	br = b -r

	c = commit --allow-empty --verbose
	cN = c --no-verify
	ca = c --amend --reset-author
	caN = ca --no-verify
	cc = "!f() { exec git c --edit --file .git/COMMIT_EDITMSG \"$@\"; }; f"
	ccrb = "!f() { exec git c --edit --file .git/rebase-merge/message \"$@\"; }; f"
	cf = c --fixup
	cs = c --sign-off

	co = checkout
	cop = co --patch

	cp = cherry-pick

	d = diff --stat --patch
	dc = d --word-diff --word-diff-regex=.
	ds = d --staged
	dsc = ds --word-diff --word-diff-regex=.

	f = fetch
	fun = fetch --unshallow

	l = log-formatted
	la = l --all --full-history
	lag = la --graph
	ld = "!f() { exec git log \"$1@{1}..$1@{0}\"; }; f"
	lf = log --follow --patch
	lg = log-formatted --graph
	ll = log --left-only --pretty=format:'%C(yellow)%h%C(magenta)%G?%C(bold red)%d%C(reset)%C(reset) %C(dim white)(%ch)%C(reset) %s %C(bold blue)%aN %C(reset)%C(blue)<%ae>%C(reset)%n%n%-b'
	log-formatted = log --date-order --pretty=format:'%C(yellow)%h%C(bold red)%d%C(reset)%C(reset) %s %C(dim white)(%cr)%C(reset) %C(bold blue)%aN%C(reset)'
	log-vim = l
	lp = ll --patch --stat
	ls = l --stat
	lu = l @{upstream}
	lud = l @...@{upstream}

	m = merge
	mc = m --continue

	mt = mergetool

	push-origin = push -u origin HEAD
	pushN = push --no-verify

	ra = !git diff --name-only --diff-filter=U -z | xargs -0r grep -LZ '<<<<<<<' | xargs -0r git add -v
	rb = rebase
	rbb = rb -s recursive -X diff-algorithm=minimal,ignore-all-space
	rbp = rb --show-current-patch
	rc = rb --continue
	re = rb --edit-todo
	ri = rb --interactive
	riom = ri origin/master
	rip = ri @{push}
	riu = ri @{upstream}

	rp = reset --patch
	rso = remote show origin

	s = status --ahead-behind --show-stash --branch
	sun = s --untracked=no
	zsh-status = s --untracked=no

	sl = stash list --stat
	slp = sl -p
	sp = stash pop
	ss = status --short --branch
	st = stash push
	stpull = "!git st && git pull && git sp"

	sw = switch

	whoami = var GIT_COMMITTER_IDENT

	wt = worktree

	serve = !git daemon --port=10000 --base-path=. --export-all --reuseaddr --informative-errors --verbose
	hub = !git serve --enable=receive-pack

[am]
	threeWay = yes

[browser "echo"]
	cmd = echo


[difftool]
	prompt = no
	trustExitCode = yes

[fetch]
	prune = yes

[grep]
	lineNumber = yes

[include]
	path = config.user
	path = config.credential

[init]
	templateDir = ~/.config/git/template
	defaultBranch = master

[instaweb]
	httpd = webrick
	browser = echo

[interactive]
	singleKey = yes

[merge]
	tool = nvimdiff
	conflictStyle = diff3

[mergetool "nvimdiffx"]
	keepBackup = no
	trustExitCode = yes
	cmd = nvim -d "$MERGED" "$BASE" "$LOCAL" "$REMOTE" +"wincmd J"

[pull]
	rebase = yes

[rebase]
	missingCommitsCheck = error
	instructionFormat = "%s (%ar) %an"
	autoSquash = yes
	stat = yes

[sendemail]
	smtpEncryption = tls
	annotate = yes
	assume8bitEncoding = yes
	xmailer = no
